#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

ynh_clean_setup () {
# Nettoyage des résidus d'installation non pris en charge par le script remove.
	if test -n "$PID_TAIL"
	then
		SUPPRESS_WARNING kill -s 15 $PID_TAIL	# Arrête l'exécution de tail.
		sudo rm -f "$tempfile"
	fi
	echo ""
}
ynh_abort_if_errors	# Active trap pour arrêter le script si une erreur est détectée.

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC
path="" # Assure la compatibilité avec les fonctions utilisant $path_url

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================

CHECK_USER "$admin"	# Vérifie la validité de l'user admin

if sudo yunohost domain list | grep -q $domain	# Vérifie la liste des domaines
then	# Si le domaine existe dans Yunohost
	if sudo yunohost app map | grep -q $domain	# Vérifie la liste des apps par domaine
	then 	# Si une app est installée sur ce domaine.
		WARNING echo "An app is already installed on the domain $domain. Mypads needs a whole domain or subdomain to himself."
	fi
fi

CHECK_DOMAINPATH	# Vérifie la disponibilité du path et du domaine.
CHECK_FINALPATH	# Vérifie que le dossier de destination n'est pas déjà utilisé.

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app admin $admin
ynh_app_setting_set $app is_public $is_public

#=================================================
# STANDARD MODIFICATIONS
#=================================================

#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_install_app_dependencies npm nodejs-legacy git

#=================================================
# CREATE A SQL BDD
#=================================================

## db_name=$(ynh_make_valid_dbid $app)
## ynh_app_setting_set $app db_name $db_name
## ynh_mysql_generate_db $db_name $db_name

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

ynh_app_setting_set $app final_path $final_path
SETUP_SOURCE	# Télécharge la source, décompresse et copie dans $final_path

#=================================================
# NGINX CONFIGURATION
#=================================================

# Et copie le fichier de config nginx
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf
# Modifie les variables dans le fichier de configuration nginx


#=================================================
# CREATE DEDICATED USER
#=================================================

ynh_system_user_create $app	# Créer un utilisateur système dédié à l'app

#=================================================
# SPECIFIC SETUP
#=================================================


#=================================================
# INSTALL Tutanota
#=================================================

# Installe les dépendances de etherpad et procède à l'intallation.
sudo npm install -g gulp
sudo npm install
cd web
sudo gulp dist
sudo mv cp -r /usr/local/src/tutanota/web/build /var/www/tutanota

#=================================================
# SECURING FILES AND DIRECTORIES
#=================================================

sudo chown -R www-data:www-data $final_path

#=================================================
# SETUP SYSTEMD
#=================================================

## sudo cp ../conf/etherpad.service /etc/systemd/system/$app.service
## sudo chown root: /etc/systemd/system/$app.service
## sudo sed -i "s@__FINALPATH__@$final_path/@g" /etc/systemd/system/$app.service
## sudo sed -i "s@__APP__@$app@g" /etc/systemd/system/$app.service
## Démarrage auto du service
## sudo systemctl enable $app

# Modif the variables in the nginx configuration file
sudo sed -i "s@__PATHTOCHANGE__@$path@g" /etc/nginx/conf.d/$domain.d/$app.conf
sudo sed -i "s@__FINALPATH__@$final_path@g" /etc/nginx/conf.d/$domain.d/$app.conf
sudo sed -i "s@__NAMETOCHANGE__@$app@g" /etc/nginx/conf.d/$domain.d/$app.conf


#=================================================
# ENABLE SERVICE IN ADMIN PANEL
#=================================================

# Ajoute le service au monitoring de Yunohost.
sudo yunohost service add $app --log "/var/log/$app/etherpad.log"

#=================================================
# INSTALL FRAMAPAD'S PLUGINS
#=================================================

script_dir="$PWD"
cd "$final_path"


#=================================================
# START ETHERPAD IN BACKGROUND
#=================================================

sudo systemctl start $app

#=================================================
# SETUP SSOWAT
#=================================================

if [ $is_public -eq 1 ]; then
	ynh_app_setting_set $app skipped_uris "/"
else
	ynh_app_setting_set $app skipped_uris "/admin"	# La page d'admin etherpad ne supporte pas le sso...
fi

#=================================================
# RELOAD NGINX
#=================================================

sudo systemctl reload nginx
